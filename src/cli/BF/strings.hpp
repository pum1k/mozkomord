#ifndef CLI_BF_STRINGS_HPP_
#define CLI_BF_STRINGS_HPP_

// #############################################################################
// #### MEMORY ERROR MESSAGES ##################################################
// #############################################################################

namespace BF
{

namespace strings
{

// #############################################################################
// #### ERROR MESSAGES #########################################################
// #############################################################################

inline constexpr const char *increment_error =
    "Incrementing pointer to the last element in the memory is not allowed "
    "for "
    "this type of memory. "
    "Try increasing the size of the memory or using a different memory "
    "type.";

inline constexpr const char *decrement_error =
    "Decrementing pointer to the first element in the memory is not allowed "
    "for this type of memory. "
    "Try using a different memory type.";

inline constexpr const char *prog_read_input_error =
    "Error while reading input for the interpreted program.";

inline constexpr const char *mem_ptr_null_error =
    "Memory pointer cannot be nullptr.";

inline constexpr const char *mem_index_error =
    "Memory does not contain element with index: ";

// #############################################################################
// #### DEBUGGER MESSAGES ######################################################
// #############################################################################

inline constexpr const char *debugger_questionmark_to_show_help =
    "You can use \"?\" command to show help.";

inline constexpr const char *debugger_help =
    "Commands:\n"
    "c - Continue execution of the program.\n"
    "m - Print current state of the memory. (hex numbers printed)\n"
    "f - Write contents of memory to specified file.\n"
    "q - Quit debugging session (interpreted program will be terminated).\n"
    "i - Show all input to the interpreted program.\n"
    "    (This input may still be waiting for the program to process it.)\n"
    "o - Show all output generated by the interpreted program.\n"
    "w - Show instructions surrounding this breakpoint.\n"
    "? - Show this help.\n";

inline constexpr const char *debugger_breakpoint_pos =
    "^ - ## This breakpoint ##";

} // namespace strings

} // namespace BF

#endif // CLI_BF_STRINGS_HPP_
